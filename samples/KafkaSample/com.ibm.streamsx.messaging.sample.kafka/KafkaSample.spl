// *******************************************************************************
// * Copyright (C)2014, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
//
namespace com.ibm.streamsx.messaging.sample.kafka;

use com.ibm.streamsx.messaging.kafka::*;

/**
 * Example of using a [KafkaProducer] and [KafkaConsumer]
 * This assumes that the topic has already been created
 * 
 */

composite KafkaSample {
	param
		expression<rstring> $topic : "mytopic";
    graph

	  //create some messages and send to Kafka
		stream<rstring topic, rstring key, rstring message> OutputStream = Beacon() {
			param
				iterations : 10 ;
				period : 1.0 ;
			output OutputStream: topic = $topic, message = "this is from kafka sink", key = "abc";
		}


		() as KafkaSinkOp = KafkaProducer(OutputStream) {
			param
				propertiesFile : "etc/producer.properties";
		}
		
		stream<rstring key, rstring message> KafkaStream = KafkaConsumer()
		{
			param
				propertiesFile : "etc/consumer.properties" ;
				topic : $topic ;
		}

		() as SinkOp = Custom(KafkaStream)
		{
			logic
				onTuple KafkaStream : println("Message: " +(rstring) KafkaStream) ;
		}
}
