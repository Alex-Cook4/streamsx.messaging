// *******************************************************************************
// * Copyright (C)2014, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
//
namespace com.ibm.streamsx.messaging.sample.kafka;

use com.ibm.streamsx.messaging.kafka::*;

/**
 * Example of using a [KafkaProducer] and [KafkaConsumer]
 * This assumes that the topic has already been created
 * If you are not using the java default truststore, you must specify the 
 * following properties in your consumer.properties and producer.properties files:
 * ssl.truststore.location=etc/truststore.jks
 * ssl.truststore.password=passw0rd
 * 
 */

composite KafkaSSLSample {
	param 
		expression<rstring> $topic : "sampleTopic" ;
    graph

	  //create some messages and send to Kafka
		stream<rstring topic, rstring key, rstring message> OutputStream = Beacon() {
			param
				initDelay : 5.0;
				period : 0.2;
			output OutputStream: topic = $topic, message = "Be less curious about people and more curious about ideas." , key = "Marie Curie";
		}


		() as KafkaSinkOp = KafkaProducer(OutputStream) {
			param
				propertiesFile : getThisToolkitDir() + "/etc/producer.properties";
		}
		
		stream<rstring key, rstring message> KafkaStream = KafkaConsumer()
		{
			param
				propertiesFile : getThisToolkitDir() + "/etc/consumer.properties" ;
				topic : $topic;
		}

		() as SinkOp = Custom(KafkaStream)
		{
		
			logic
				onTuple KafkaStream :
				{
					printStringLn("Message: " + (rstring) KafkaStream) ;
				}
			
		}
}
