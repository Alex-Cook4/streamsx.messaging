// *******************************************************************************
// * Copyright (C)2014, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// ******************************************************************************* 
namespace com.ibm.streamsx.messaging.sample.xms ;

use com.ibm.streamsx.messaging.xms::* ;

/** This sample demonstrates how to use the XMSSink operator to send messages from Websphere MQ server.
 * 
 * The sample uses the settings from the connection document in etc/connections.xml to connect to the 
 * messaging server.
 * 
 * To use this sample, you will need to update the connection document.  You need to specify the following:
 * * the binding file that connects connection information to your messaging server
 * * update the connection document to the correct end-point from your messaging server
 * 
 * When a tuple is received by the operator, the operator constructs a XMS message and sends the message
 * to the messaging server. 
 * 
 * */
composite XMSSinkMain
{
	type
		PersonSchema = int32 id, rstring fname, rstring lname, int32 age,
			rstring gender, float32 score, float64 total ;
	graph
		stream<PersonSchema> inputData = FileSource()
		{
			param
				file : "testdata.csv" ;
				format : csv ;
				initDelay : 1.0 ;
		}

		() as mySink = XMSSink(inputData)
		{
			param
			//	connectionDocument : default is ./etc/connection.xml;
				connection : "conn1" ;
				access : "access1" ;
		}

}
